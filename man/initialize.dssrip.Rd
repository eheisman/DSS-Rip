% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dssrip2.r
\name{initialize.dssrip}
\alias{initialize.dssrip}
\title{DSS-Rip Initalization Options}
\usage{
initialize.dssrip(
  pkgname = NULL,
  lib.loc,
  dss_location = getOption("dss_location"),
  dss_jre = getOption("dss_jre_location"),
  platform = NULL,
  quietDSS = T,
  verboseLib = F,
  parameters = NULL,
  ...
)
}
\arguments{
\item{dss_location}{Specify location of DSSVue libraries if not in default location.}

\item{platform}{Specify platform, used in determining default DSS location.}

\item{quietDSS}{- don't show 'Z' messages during opening, reading, and writing to a file.  Experimental.}

\item{parameters}{Options string to pass to JVM.}

\item{as.package}{If true, uses .jpackage instead of .jinit for better encapsulation of module. (Buggy!)}
}
\value{
JVM initialization status - 0 if successful, positive for partial initialization, negative for failure.  See ?.jinit
}
\description{
Starts a rJava JVM with configuration for DSS-Vue's jar and dll files.
}
\details{
as.package is an experimental parameter for calling this as part of the onLoad function as part
  of the DSS-Rip package.  This is the prefered method for an R package, but not yet functional
  for this.  The best practice is to load the DSS-Rip package, and call initialize.dssrip with
  as.package=FALSE, the default value.  Either the 'nativeLibrary' parameter for .jpackage, or
  as a dyn.load, would be the place to load javaHeclib.dll, but rather than distribute it with 
  this R package, the user should obtain it from an install of HEC-DSSVue.  Further reasons to 
  use .jinit include being able to initialize the JVM in the same manner as HEC-DSSVue would, 
  adding the appropriate jars and DLLs as start up options.
TODO Implement so that dssrip can be loaded after other rJava based packages
TODO Quiet DSS status messages
}
\author{
Evan Heisman
}
