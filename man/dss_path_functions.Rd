% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paths.R
\name{dss_path_functions}
\alias{dss_path_functions}
\alias{getAllPaths}
\alias{getCatalogedPathnames}
\alias{getCondensedCatalog}
\alias{getPaths}
\alias{fullPathByWildcard}
\alias{fullPathByRegex}
\alias{pathByPartsWildcard}
\alias{pathByPartsRegex}
\alias{splitPattern}
\alias{separatePathParts}
\alias{pathsToDataFrame}
\title{Functions for searching pathnames in a DSS file}
\usage{
\code{getCatalogedPathnames(file)}
\code{getPaths(file, searchString)}
\code{getPaths(file, searchString, searchFunction, ...)}
\code{getAllPaths(file, rebuild=TRUE)}
\code{splitPattern(pattern)}
\code{separatePathParts(paths)}
}
\arguments{
\item{file}{dss file from \code{opendss}}

\item{searchString}{string sent to filter for search, see detail section on filters.}

\item{searchFunction}{function used to search, defaults to path by parts.}

\item{useRegex}{boolean to determine if regex or wildcards should be used.}
}
\value{
list or data.frame of pathnames
}
\description{
Functions to search for path names in DSS files.
}
\details{
functions ending in \code{Wildcard} use the standard "*" to match wildcard characters, converting search strings with \code{\link{glob2rx}}.  Search functions ending in \code{Regex} use the \code{\link{grepl}} function to test parts.

\code{fullPath} functions expect a six part full path name (e.g. \code{/A/B/C/D/E/F/}), with asterisks for unknown parts, as blanks match blank path parts. 

\code{pathByParts} functions use the format "\code{A=PATTERN B=PATTERN}" for their search string.  Parts not specified will be searched for as a wildcard

\code{getCatalogedPathnames} and \code{getCondensedCatalog} calls `getCatalogedPathnames` and `getCondensedCatalog` functions in Java API and converts result to R character vector.

\code{getAllPaths} tries to read the DSS catalog file (does not work in R 4.0) instead of calling Java API and should be deprecated.

See Page 8-32 of the HEC-DSSVue manual for further examples on the wildcard methods.  The "at" character cannot be used as a wildcard.  

Custom search functions can be written to take the first two parameters as the full list of paths as a character vector, and a search pattern string.  
The search pattern string can be provided as an empty string with other parameters provided for the search. \code{splitPattern} will split a path by parts pattern into search terms, and \code{separatePathParts} will split a full path pattern into search terms.
}
\examples{

# recommended search technique:
paths = pathsToDataFrame(getCatalogedPathnames(dssfile), simplify=T)
bwCreekStagePaths = subset(paths, LOCATION="BRANDYWINE CREEK", PARAMETER="STAGE")$PATH

# these can be a little flaky.
getPaths(dssfile, "A=BRANDYWINE CREEK B=WILMINGTON, DE C=STAGE F=USGS")
getPaths(dssfile, "A=BRANDYWINE CREEK B=WILMINGTON, DE C=STAGE F=USGS", pathByPartsWildcard)
getPaths(dssfile, "A=BRANDYWINE CREEK B=WILMINGTON, DE C=STAGE F=US.*", pathByPartsRegex)
getPaths(dssfile, "/BRANDYWINE CREEK/WILMINGTON, DE/STAGE/*/*/USGS/")
getPaths(dssfile, "/BRANDYWINE CREEK/WILMINGTON, DE/STAGE/*/*/USGS/", fullPathByWildcard)
getPaths(dssfile, "/BRANDYWINE CREEK/WILMINGTON, DE/STAGE/.*/.*/USGS/", fullPathByRegex)
getAllPaths(dssfile)
getAllPaths(dssfile, rebuild=TRUE)
}
\author{
Evan
}
